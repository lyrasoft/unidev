{"version":3,"sources":["aws/s3-uploader.js"],"names":["S3Uploader","name","instances","args","options","$","extend","constructor","defaultOptions","file","path","fileData","FormData","append","subfolder","trim","acl","accessKey","policy","signature","type","post","url","endpoint","data","processData","contentType","done","res","textStatus","xhr","console","log","fail","bucket","region","version"],"mappings":";;;;;;;;;;;;;;;;AAAA;;;;;;IAOMA,U;;;;;gCAceC,I,EAAe;AAChC,UAAI,CAAC,KAAKC,SAAL,CAAeD,IAAf,CAAL,EAA2B;AAAA,0CADDE,IACC;AADDA,UAAAA,IACC;AAAA;;AACzB,aAAKD,SAAL,CAAeD,IAAf,eAA2B,IAA3B,GAAgCA,IAAhC,SAAyCE,IAAzC;AACD;;AAED,aAAO,KAAKD,SAAL,CAAeD,IAAf,CAAP;AACD;;;AAED,sBAAYA,IAAZ,EAAgC;AAAA,QAAdG,OAAc,uEAAJ,EAAI;;AAAA;;AAC9B,SAAKH,IAAL,GAAYA,IAAZ;AACA,SAAKG,OAAL,GAAeC,CAAC,CAACC,MAAF,CAAS,IAAT,EAAe,EAAf,EAAmB,KAAKC,WAAL,CAAiBC,cAApC,EAAoDJ,OAApD,CAAf;AACD;;;;2BAEMK,I,EAAMC,I,EAAoB;AAAA,UAAdN,OAAc,uEAAJ,EAAI;AAC/B,UAAMO,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AAEAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,KAAhB,EAAuB,KAAKT,OAAL,CAAaU,SAAb,CAAuBC,IAAvB,CAA4B,GAA5B,IAAmC,GAAnC,GAAyCL,IAAI,CAACK,IAAL,CAAU,GAAV,CAAhE;AACAJ,MAAAA,QAAQ,CAACE,MAAT,CAAgB,KAAhB,EAAuB,KAAKT,OAAL,CAAaY,GAApC;AACAL,MAAAA,QAAQ,CAACE,MAAT,CAAgB,gBAAhB,EAAkC,KAAKT,OAAL,CAAaa,SAA/C;AACAN,MAAAA,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0B,KAAKT,OAAL,CAAac,MAAvC;AACAP,MAAAA,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6B,KAAKT,OAAL,CAAae,SAA1C;AACAR,MAAAA,QAAQ,CAACE,MAAT,CAAgB,cAAhB,EAAgCJ,IAAI,CAACW,IAArC;AACAT,MAAAA,QAAQ,CAACE,MAAT,CAAgB,qBAAhB,EAAuC,EAAvC;AACAF,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBJ,IAAxB;AAEAJ,MAAAA,CAAC,CAACgB,IAAF,CAAO;AACHC,QAAAA,GAAG,EAAE,KAAKlB,OAAL,CAAamB,QADf;AAEHC,QAAAA,IAAI,EAAEb,QAFH;AAGHc,QAAAA,WAAW,EAAE,KAHV;AAIHC,QAAAA,WAAW,EAAE,KAJV;AAKHN,QAAAA,IAAI,EAAE;AALH,OAAP,EAOGO,IAPH,CAOQ,UAACC,GAAD,EAAOC,UAAP,EAAmBC,GAAnB,EAA2B;AAC/BC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OATH,EAUGG,IAVH,CAUQ,UAACH,GAAD,EAAS;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OAZH,EAZ+B,CA0B/B;AACD;;;;;;gBAtDG9B,U,oBACoB;AACtBiB,EAAAA,SAAS,EAAE,EADW;AAEtBiB,EAAAA,MAAM,EAAE,EAFc;AAGtBf,EAAAA,SAAS,EAAE,EAHW;AAItBH,EAAAA,GAAG,EAAE,EAJiB;AAKtBO,EAAAA,QAAQ,EAAE,EALY;AAMtBY,EAAAA,MAAM,EAAE,EANc;AAOtBrB,EAAAA,SAAS,EAAE,EAPW;AAQtBsB,EAAAA,OAAO,EAAE;AARa,C;;gBADpBpC,U,eAYe,E","sourcesContent":["/**\n * Part of earth project.\n *\n * @copyright  Copyright (C) 2019 ${ORGANIZATION}.\n * @license    __LICENSE__\n */\n\nclass S3Uploader {\n  static defaultOptions = {\n    accessKey: '',\n    bucket: '',\n    signature: '',\n    acl: '',\n    endpoint: '',\n    region: '',\n    subfolder: '',\n    version: 2\n  };\n\n  static instances = {};\n\n  static getInstance(name, ...args) {\n    if (!this.instances[name]) {\n      this.instances[name] = new this(name, ...args);\n    }\n\n    return this.instances[name];\n  }\n\n  constructor(name, options = {}) {\n    this.name = name;\n    this.options = $.extend(true, {}, this.constructor.defaultOptions, options);\n  }\n\n  upload(file, path, options = {}) {\n    const fileData = new FormData();\n\n    fileData.append('key', this.options.subfolder.trim('/') + '/' + path.trim('/'));\n    fileData.append('acl', this.options.acl);\n    fileData.append('AWSAccessKeyId', this.options.accessKey);\n    fileData.append('policy', this.options.policy);\n    fileData.append('signature', this.options.signature);\n    fileData.append('Content-type', file.type);\n    fileData.append('Content-Disposition', '');\n    fileData.append('file', file);\n\n    $.post({\n        url: this.options.endpoint,\n        data: fileData,\n        processData: false,\n        contentType: false,\n        type: 'POST'\n      })\n      .done((res,  textStatus, xhr) => {\n        console.log(xhr);\n      })\n      .fail((xhr) => {\n        console.log(xhr);\n      });\n\n    // console.log(this.options.endpoint + '/' + this.options.subfolder.trim('/') + '/' + path.trim('/'));\n  }\n}\n"],"file":"s3-uploader.js"}